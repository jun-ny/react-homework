{"version":3,"sources":["components/TOC.js","components/ReadContent.js","components/CreateContent.js","components/UpdateContent.js","components/Subject.js","components/Control.js","App.js","reportWebVitals.js","index.js"],"names":["TOC","newProps","newState","this","props","data","console","log","lists","i","length","push","href","id","data-id","onClick","e","preventDefault","onChangePage","target","dataset","bind","title","Component","ReadContent","desc","CreateContent","action","method","onSubmit","value","type","name","placeholder","UpdateContent","state","inputFormHandler","setState","onChange","Subject","sub","Control","onChangeMode","App","max_content_id","mode","selected_content_id","subject","welcome","contents","_title","_desc","_article","_content","getReadContent","_contents","Array","from","_id","className","Number","_mode","window","confirm","splice","alert","getContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.782526fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component {\n    shouldComponentUpdate(newProps, newState){    // return false -> render 출력 안 함, return true -> render 출력\n      if(this.props.data === newProps.data) {     //이전 값과 이후 값을 비교해서, 값이 바뀔 때만 render를 수정한다.\n        return false;\n      }\n      return true;\n    }\n    render() {\n      console.log('TOC render');\n      var lists = [];\n      var data = this.props.data;\n      var i = 0;\n      while( i < data.length) {\n        lists.push(\n        <li key={data[i].id}>\n          <a\n           href={\"/content/\"+data[i].id}\n           data-id={data[i].id}\n           onClick={function(e){\n            e.preventDefault();\n            this.props.onChangePage(e.target.dataset.id);\n           }.bind(this)}\n          >{data[i].title}</a>\n          </li>)\n        \n        i = i + 1;\n      }\n      return (\n        <nav>\n        <ul>\n                {lists}\n        </ul>\n        </nav>\n      );\n    }\n  }\n\nexport default TOC; // 이 코드를 사용할 수 있게 해줌\n","import React, { Component } from 'react';\nclass ReadContent extends Component{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n      <h2>{this.props.title}</h2>\n      {this.props.desc}\n        </article>\n      )\n    }\n  }\n\n  export default ReadContent;","import React, { Component } from 'react';\n\nclass CreateContent extends Component{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n            <h2>Create</h2>\n            <form action=\"/create_process\" method=\"post\"\n              onSubmit={function(e){\n                e.preventDefault();\n                this.props.onSubmit(\n                  e.target.title.value,\n                  e.target.desc.value\n                );\n              }.bind(this)}\n            >\n              <p><input type=\"text\" name=\"title\" placeholder=\"title\"></input></p>\n              <p>\n                <textarea name=\"desc\" placeholder=\"description\"></textarea>\n              </p>\n              <p>\n                <input type=\"submit\"></input>\n              </p>\n            </form>\n        </article>\n      );\n    }\n  }\n\n\n  export default CreateContent;","import React, { Component } from 'react';\nclass UpdateContent extends Component{\n    constructor(props) {     // props는 read only이기 때문에 가변적으로 사용할 수 있는 state를 사용한다\n      super(props);\n      this.state = {\n        id:this.props.data.id,\n        title:this.props.data.title,\n        desc:this.props.data.desc\n      }\n      this.inputFormHandler = this.inputFormHandler.bind(this); // .bind(this)를 주입시켜줌\n    }\n    inputFormHandler(e) {     // e.target.name을 이용해 해당 데이터의 값을 가져와 줌\n      this.setState({[e.target.name]:e.target.value});\n    }\n    render(){\n      console.log(this.props.data);\n      console.log('UpdateContent render');\n      return (\n        <article>\n      <h2>Update</h2>\n      <form action=\"/create_process\" method=\"post\"\n       onSubmit={function(e){\n         e.preventDefault();\n         \n         this.props.onSubmit(this.state.id, this.state.title, this.state.desc);\n}.bind(this)}\n      >\n        <input type=\"hidden\" name=\"id\" value={this.state.id}></input>\n        <p><input \n        type=\"text\" \n        name=\"title\"\n        placeholder=\"title\" \n        value={this.state.title} \n        onChange={this.inputFormHandler}>\n          </input></p>\n        <p><textarea \n        name=\"desc\" \n        placeholder=\"description\"\n        value={this.state.desc}\n        onChange={this.inputFormHandler}\n        ></textarea></p>\n        <p><input type=\"submit\"></input></p>\n      </form>\n        </article>\n      )\n    }\n  }\n\n  export default UpdateContent;","import React, { Component } from 'react';\n\nclass Subject extends Component {\n    render() {\n      console.log('Subject render');\n      return (\n        <header>\n          <h1><a href=\"/\" onClick={function(e){\n            e.preventDefault();\n            this.props.onChangePage();\n          }.bind(this)}>{this.props.title}</a></h1>\n          {this.props.sub}\n        </header>\n      );\n    }\n  }\n  export default Subject;","import React, { Component } from 'react';\n\nclass Control extends Component {\n    render() {\n      console.log('Subject render');\n      return (\n        <ul>\n        <li><a href=\"/create\" onClick={function(e) {\n          e.preventDefault();\n          this.props.onChangeMode('create');\n        }.bind(this)}>create</a></li>\n        <li><a href=\"/update\"onClick={function(e) {\n          e.preventDefault();\n          this.props.onChangeMode('update');\n        }.bind(this)}>update</a></li>\n        <li><input type=\"button\" value=\"delete\"onClick={function(e) {\n          e.preventDefault();\n          this.props.onChangeMode('delete');\n        }.bind(this)}></input></li>\n      </ul>\n      );\n    }\n  }\n  export default Control;","import React, { Component } from 'react';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\"\nimport UpdateContent from \"./components/UpdateContent\"\nimport Subject from \"./components/Subject\"\nimport Control from \"./components/Control\"\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {          \n      mode:'welcome',\n      selected_content_id:2,\n      subject:{title:'WEB', sub:'World Wide Web!'},\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents: [\n        {id:1, title:'HTML', desc:'HTML is for information'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent(){\n    var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id) {\n          return data;\n          break;\n        }\n        i = i + 1;\n      }\n  }\n  getContent() {\n    var _title, _desc, _article = null;\n    if(this.state.mode === 'welcome') {\n        _title = this.state.welcome.title;\n        _desc = this.state.welcome.desc;\n        _article = <ReadContent title = {_title} desc={_desc}></ReadContent>\n    } else if(this.state.mode === 'read') {\n       var _content = this.getReadContent();\n        _article = <ReadContent title ={_content.title} desc={_content.desc}></ReadContent>\n    } else  if(this.state.mode === 'create'){\n      _article = <CreateContent onSubmit={function(_title, _desc){\n        this.max_content_id = this.max_content_id+1;\n        var _contents = Array.from(this.state.contents);\n        _contents.push({id:this.max_content_id, title:_title, desc:_desc});\n        \n        this.setState({\n          contents:_contents,\n          mode:'read',\n          selected_content_id:this.max_content_id\n        });\n      }.bind(this)}></CreateContent>\n    } else if(this.state.mode === 'update') {\n      _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={\n        function(_id, _title, _desc){\n          var _contents = Array.from(this.state.contents); // this.state.contents를 복사한 새로운 컨텐츠를 만드는 것\n          var i = 0;\n         while( i < _contents.length) {\n           if(_contents[i].id === _id) {\n             _contents[i] = {id:_id, title:_title, desc:_desc};\n             break;\n           }\n           i = i + 1;\n         }\n        \n        this.setState({\n          contents:_contents,\n          mode:'read'\n        });\n      }.bind(this)}></UpdateContent>\n    }\n    return _article;\n\n  }\n  render() {\n   \n    return (\n      <div className=\"App\">\n        <Subject title={this.state.subject.title} \n        sub={this.state.subject.sub}\n        onChangePage={function(){\n          this.setState({mode:'welcome'});\n        }.bind(this)}\n        >  \n        </Subject>\n        <TOC onChangePage={function(id){\n          this.setState({\n            mode:'read',\n            selected_content_id:Number(id)\n          });\n        }.bind(this)} \n        data={this.state.contents}></TOC>\n      <Control onChangeMode={function(_mode){\n        if(_mode === 'delete') {\n          if(window.confirm('Really?')) {\n            var _contents = Array.from(this.state.contents);\n            var i = 0;\n            while(i < _contents.length) {\n              if(_contents[i].id === this.state.selected_content_id) {\n                _contents.splice(i,1)     // splice()는 지우겠다는 함수 (i로부터 1개를 지우겠다)\n                break;\n              }\n              i=i+1;\n            }\n            this.setState({\n              mode:'welcome',\n              contents:_contents\n            });\n              alert('deleted!');\n            }\n        } else {\n          this.setState({\n          mode:_mode\n            \n          });\n        }\n        }.bind(this)}></Control>\n        {this.getContent()} \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}